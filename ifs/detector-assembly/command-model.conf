subsystem = IRIS
component = ifs-detector-assembly

description = """
IFS Detector Assembly Commands.

This command model is designed based on [Software Design Patterns for Device and Component Controllers (TMT.INS.TEC.16.079.DRF01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-57492/cc_design_patterns_DRF01_b.docx). As proposed by the design pattern, standard assembly commands and assembly-specific commands are provided for each functional group. All commands are classified into either 'request' or 'submit' based on the command type defintion described in the design pattern document.
"""

receive = [
    {
        name = INIT
        description = """
This command causes the assembly to initialize its variables, read configuration, and verify dependencies.  It prepares the assembly internally such that it is available to communicate with outside processes and begin managing the detector.  It does not cause any readout or reset on the detector, but it validates the connections and hardware presence before completing. It also applies the detector configurations DETECTOR_CONF( (e.g. gain, number of channels) to each detector. Programs and configurations (e.g. this could be DSP code in the case of ARC controller) may be downloaded to the detector controllers if necessary.

Command type: request
"""
    }
    {
        name = TEST
        description = """
This command executes a self-test.  Actual action to be taken is TBD.

This command never starts an exposure nor reset the detector.

This command can be invoked only when there is no exposure in progress. All commands will be rejected during the test.

Command type: request
"""
    }
    {
        name = LOAD_CONFIGURATION
        description = """
This command validates the given specified exposure configuration, and save them internally in this Assembly, the underlying Detector HCD and/or the detector controllers so that the next exposure will be done with the specified configuration.

This command will be rejected during an exposure.

Command type: request
"""
        requiredArgs = [obsId, exposureNumber, rampIntegrationTime]
        args = [
            {
                name = obsId
                description = "Observation ID given by ObserveConfigArg structure as stated in [TMT Software Detailed Design (TMT.SFT.TEC.15.002.REL01)](https://docushare.tmt.org/docushare/dsweb/Get/Document-49912/TMTSoftwareDesign-CSWPD_REL01.pdf)."
                type = string
            }
            {
                name = rampIntegrationTime
                description = "Integration time for one ramp. The specified value will be rounded down to the nearest valid integration time so that it will be a multiple of readout time. The definition of the ramp integration time is the time between resets."
                type = integer
                minimum = 1750
                units = ms
            }
            {
                name = ramps
                description = "Number of ramps (= number of coadds) in one exposure."
                type = integer
                minimum = 1
                default = 1
            }
        ]
    }
    {
        name = START_EXPOSURE
        description = """
This command starts a new exposure with the pre-loaded configuration. This command is considered completed when the specified exposure time has been elapsed and the last readout is transferred to Readout Processor.

This command will be simply forwarded to the underlying Detector HCDs at the same time, and each detector will start the exposure in their own timing considering ODGW timing. There will be no hardware synchronization for the science exposure, but the start time of the exposure will be fairy the same.

Command type: submit
"""
    }
    {
        name = ABORT_EXPOSURE
        description = """
This command cancels the current exposure in progress before the specified exposure time is elapsed. If a read operation is on-going, it waits the completion of that read operation, and then stops the exposure. The last readout will be transferred to Readout Processor, and then this command is considered as completed (TBC).

Command type: submit
"""
    }
    {
        name = DATUM
        description = """
This command turns on the power of the detector (not the detector controller), and start the continuous reset. If it already on, this command does nothing.

Command type: submit
"""
    }
    {
        name = LOCK
        description = """
This command locks this assembly. Any commands that turn on the power or trigger a new exposure will be rejected when locked.

This command is expected to be called before starting the cool-down or warm-up procedure.

Command type: request
"""
    }
    {
        name = UNLOCK
        description = """
This command unlocks this assembly.

This command is expected to be called after the cool-down or warm-up procedure is completed.

Command type: request
"""
    }
    {
        name = PARK
        description = """
This command turns off the power of the detector (not the detector controller).

Command type: submit
"""
    }
    {
        name = DEBUG
        description = """
This will set the current debug level.  This is for debugging purposes and allows the user to change the level of logging for debugging purposes.

Command type: request
"""
    }
    {
        name = SHUTDOWN
        description = """
Stop this assembly running. This will cause all of the software to exit. It does not send this command down to the underlying HCDs. If currently shutting down, all other commands will be rejected.

Command type: request
"""
    }
]
